<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.pymmasoftware.jbpm</groupId>
        <artifactId>drools-framework-business-proxy-parent</artifactId>
        <version>1.1-SNAPSHOT</version>
    </parent>

    <artifactId>drools-framework-business-proxy-app</artifactId>
    <name>Chtijbug :: Business Proxy :: app</name>


    <!-- Spring-Boot and Camel BOM -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot-version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-spring-boot-dependencies</artifactId>
                <version>${camel.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>com.pymmasoftware.jbpm</groupId>
            <artifactId>drools-framework-business-proxy-persistence</artifactId>
            <version>${project.version}</version>
        </dependency>
        <!-- Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-undertow</artifactId>
        </dependency>

        <!-- Camel -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-swagger-java-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-servlet-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-jackson-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-quartz2</artifactId>
        </dependency>

        <!-- Test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-core</artifactId>
            <version>9.0.13</version>
        </dependency>
        <dependency>
            <groupId>org.kie</groupId>
            <artifactId>kie-api</artifactId>
            <version>${jbpm.version}</version>
        </dependency>
        <dependency>
            <groupId>org.kie</groupId>
            <artifactId>kie-internal</artifactId>
            <version>${jbpm.version}</version>
        </dependency>
        <dependency>
            <groupId>org.drools</groupId>
            <artifactId>drools-compiler</artifactId>
            <version>${jbpm.version}</version>
        </dependency>

        <!-- kie-server -->
        <dependency>
            <groupId>org.kie.server</groupId>
            <artifactId>kie-server-api</artifactId>
            <version>${jbpm.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.optaplanner</groupId>
                    <artifactId>optaplanner-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.optaplanner</groupId>
                    <artifactId>optaplanner-persistence-xstream</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.optaplanner</groupId>
                    <artifactId>optaplanner-persistence-jaxb</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.kie.server</groupId>
            <artifactId>kie-server-services-common</artifactId>
            <version>${jbpm.version}</version>
        </dependency>

        <dependency>
            <groupId>com.pymmasoftware.jbpm</groupId>
            <artifactId>drools-framework-kie-server-services-drools</artifactId>
            <version>${project.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.thoughtworks.xstream</groupId>
                    <artifactId>xstream</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.activemq</groupId>
                    <artifactId>artemis-jms-client</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.jboss.errai</groupId>
                    <artifactId>errai-marshalling</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-buffer</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-transport-native-kqueue</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-codec-http</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-handler</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-codec</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-transport-native-epoll</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-common</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-transport</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-transport-native-unix-common</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-resolver</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <finalName>drools-framework-business-proxy-app</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring.boot-version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>docker-build</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.21.0</version>

                        <configuration>
                            <!--registry>192.168.1.184:12500</registry-->
                            <dockerHost>${docker.Host}</dockerHost>

                            <!--  this is for Mac and Amazon Linux -->
                            <!--dockerHost>unix:///var/run/docker.sock</dockerHost-->

                            <verbose>true</verbose>
                            <images>
                                <image>
                                    <name>runtime-proxy</name>
                                    <build>
                                        <dockerFileDir>${project.basedir}/src/main/docker</dockerFileDir>

                                        <!--copies Jar to the maven directory (uses Assembly system)-->
                                        <assembly>
                                            <descriptorRef>artifact</descriptorRef>
                                        </assembly>
                                        <tags>
                                            <tag>latest</tag>
                                        </tags>

                                    </build>

                                    <run>
                                        <extraHosts>
                                            <host>mongodb:192.168.2.17</host>
                                            <host>kie-wb:192.168.2.17</host>
                                        </extraHosts>
                                        <ports>
                                            <port>8200:8200</port>
                                            <port>9080:9080</port>
                                        </ports>
                                    </run>
                                </image>
                            </images>
                        </configuration>

                        <executions>

                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>


                        </executions>

                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker-deploy</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.21.0</version>

                        <configuration>
                            <registry>registry.hub.docker.com/pymmasoftware</registry>
                            <dockerHost>${docker.Host}</dockerHost>
                            <verbose>true</verbose>
                            <images>
                                <image>
                                    <name>runtime-proxy</name>
                                    <build>
                                        <dockerFileDir>${project.basedir}/src/main/docker</dockerFileDir>

                                        <!--copies Jar to the maven directory (uses Assembly system)-->
                                        <assembly>
                                            <descriptorRef>artifact</descriptorRef>
                                        </assembly>
                                        <tags>
                                            <tag>latest</tag>
                                        </tags>

                                    </build>

                                    <run>
                                        <extraHosts>
                                            <host>mongodb:192.168.1.100</host>
                                        </extraHosts>
                                        <ports>
                                            <port>8080:8080</port>
                                        </ports>
                                    </run>
                                </image>
                            </images>
                            <authConfig>
                                <username>pymmasoftwaredeploy</username>
                                <password>pymmalomme</password>
                            </authConfig>
                            <retries>5</retries>
                        </configuration>

                        <executions>
                            <execution>
                                <id>mydeploy</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>build</goal>
                                    <goal>push</goal>
                                </goals>
                            </execution>

                        </executions>

                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
