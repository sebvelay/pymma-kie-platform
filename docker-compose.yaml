version: "3"


networks:
  drools-network-dev:
    ipam:
      config:
        - subnet: 172.27.1.0/24


services:

  kie-wb:
    image: kie-wb
    container_name: "businessCentral"
    volumes:
      - gitdata:/home/niodir
      - lucenedata:/home/lucene
    hostname: kie-wb.pymma
    networks:
      drools-network-dev:
        ipv4_address: 172.27.1.5
    links:
      - keycloak:keycloak
    depends_on:
      - keycloak
    ports:
      - 8080:8080
      - 8001:8001
    restart: always



  admin-console:
    image: runtime-admin-console
    container_name: "admin-console"
    hostname: admin.pymma
    networks:
      drools-network-dev:
        ipv4_address: 172.27.1.6
    ports:
      - 8200:8200
    links:
      - businessProxyDB:mongodb
      - elasticsearchhost:elasticdb
      - kie-wb
    depends_on:
      - businessProxyDB
      - elasticsearchhost
      - kie-wb
    restart: always


  swimmingpool-wb:
    image: swimmingpool-web-ui
    container_name: "swimmingpool-web-ui"
    environment:
      PYMMA_OPTS: " "
    hostname: swimmingpool-wb.pymma
    networks:
      drools-network-dev:
        ipv4_address: 172.27.1.15
    ports:
      - 8080:12099
    links:
      - runtime-reverse-proxy:reverse-proxy
    depends_on:
      - runtime-reverse-proxy
    restart: always


#-Xdebug -Xrunjdwp:server=y,transport=dt_socket,address=4000,suspend=y
  runtime-proxy-1:
    image: runtime-proxy
    container_name: "runtime-proxy-1"
    volumes:
      - kieserverdir:/niodir-kieserver
    environment:
      PYMMA_OPTS: "-Dorg.kie.server.id=server1"
    hostname: proxy1.pymma
    networks:
      drools-network-dev:
        ipv4_address: 172.27.1.22
    ports:
      - 8090
      - 9080
    links:
      - businessProxyDB:mongodb
      - kie-wb:kie-wb
    depends_on:
      - businessProxyDB
      - kie-wb
    restart: always

  runtime-proxy-2:
    image: runtime-proxy
    container_name: "runtime-proxy-2"
    volumes:
      - kieserverdir:/niodir-kieserver
    environment:
      PYMMA_OPTS: "-Dorg.kie.server.id=server2"
    hostname: proxy2.pymma
    networks:
      drools-network-dev:
        ipv4_address: 172.27.1.32
    ports:
      - 8090
      - 9080
    links:
      - businessProxyDB:mongodb
      - kie-wb:kie-wb
    depends_on:
      - businessProxyDB
      - kie-wb
    restart: always

  runtime-proxy-3:
    image: runtime-proxy
    container_name: "runtime-proxy-3"
    volumes:
      - kieserverdir:/niodir-kieserver
    environment:
      PYMMA_OPTS: "-Dorg.kie.server.id=server3"
    hostname: proxy3.pymma
    networks:
      drools-network-dev:
        ipv4_address: 172.27.1.42
    ports:
      - 8090
      - 9080
    links:
      - businessProxyDB:mongodb
      - kie-wb:kie-wb
    depends_on:
      - businessProxyDB
      - kie-wb
    restart: always

  runtime-proxy-4:
    image: runtime-proxy
    container_name: "runtime-proxy-4"
    volumes:
      - kieserverdir:/niodir-kieserver
    environment:
      PYMMA_OPTS: "-Dorg.kie.server.id=server4"
    hostname: proxy4.pymma
    networks:
      drools-network-dev:
        ipv4_address: 172.27.1.52
    ports:
      - 8090
      - 9080
    links:
      - businessProxyDB:mongodb
      - kie-wb:kie-wb
    depends_on:
      - businessProxyDB
      - kie-wb
    restart: always

  runtime-proxy-5:
    image: runtime-proxy
    container_name: "runtime-proxy-5"
    volumes:
      - kieserverdir:/niodir-kieserver
    environment:
      PYMMA_OPTS: "-Dorg.kie.server.id=server5"
    hostname: proxy5.pymma
    networks:
      drools-network-dev:
        ipv4_address: 172.27.1.62
    ports:
      - 8090
      - 9080
    links:
      - businessProxyDB:mongodb
      - kie-wb:kie-wb
    depends_on:
      - businessProxyDB
      - kie-wb
    restart: always


  runtime-indexer:
    image: runtime-indexer
    container_name: "runtime-indexer"
    hostname: indexer.pymma
    networks:
      drools-network-dev:
        ipv4_address: 172.27.1.23
    links:
      - businessProxyDB:mongodb
      - elasticsearchhost:elasticdb
    depends_on:
      - businessProxyDB
      - elasticsearchhost
    restart: always

  runtime-reverse-proxy:
    image: runtime-reverse-proxy
    container_name: "runtime-reverse-proxy"
    hostname: reverse-proxy.pymma
    networks:
      drools-network-dev:
        ipv4_address: 172.27.1.25
    links:
      - businessProxyDB:mongodb
    depends_on:
      - businessProxyDB
    ports:
      - 9500:9500
    restart: always



  elasticsearchhost:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.2
    container_name: "elasticsearchhost"
    environment:
    - network.host=0.0.0.0
    - cluster.name=elasticsearch
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata2:/usr/share/elasticsearch/data
    hostname: es.pymma
    networks:
      drools-network-dev:
        ipv4_address: 172.27.1.7
    ports:
      - 9300:9300
      - 9200:9200
    restart: always


  businessProxyDB:
    image: mongo
    container_name: "businessProxyDB"
    volumes:
      - mongodb:/data/db
      - mongodb_config:/data/configdb
    hostname: mongo.pymma
    networks:
      drools-network-dev:
        ipv4_address: 172.27.1.3
    ports:
      - 28017:27017
    command: mongod
    restart: always

  postgres:
    image: keycloak-db
    volumes:
      - pgdata1:/var/lib/postgresql/data
      - pgdata2:/home/pgdata
    hostname: pg.pymma
    networks:
      drools-network-dev:
        ipv4_address: 172.27.1.200
    ports:
      - 6666:5432
    restart: always

  keycloak:
    image: jboss/keycloak:5.0.0
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: 172.27.1.200
      DB_DATABASE: keycloakdb
      DB_USER: keycloak_user
      DB_SCHEMA: public
      DB_PASSWORD: keycloak_user
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
        # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
        #JDBC_PARAMS: "ssl=true"
    hostname: keycloak.pymma
    networks:
      drools-network-dev:
        ipv4_address: 172.27.1.201
    links:
      - postgres:postgres
    ports:
      - 10080:8080
    depends_on:
      - postgres

  dps:
    image: defreitas/dns-proxy-server:2.13.2
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/resolv.conf:/etc/resolv.conf
    environment:
      - MG_LOG_LEVEL=ERROR
    hostname: dns.pymma
    networks:
      drools-network-dev:
        ipv4_address: 172.27.1.233
    ports:
      - 5380:5380



volumes:
  mongodb:
  mongodb_config:
  gitdata:
  lucenedata:
  esdata2:
  kieserverdir:
  pgdata1:
  pgdata2:
  pgdata3:
  pgdata4: