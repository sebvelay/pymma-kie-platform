<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>drools-framework-kie-wb-parent</artifactId>
        <groupId>com.pymmasoftware.jbpm</groupId>
        <version>1.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>kie-wb</artifactId>

    <packaging>war</packaging>
    <name>Pymma platform workbench</name>
    <description>Pymma Plarform Kie-wb</description>

    <dependencies>
        <dependency>
            <groupId>org.uberfire</groupId>
            <artifactId>uberfire-security-management-keycloak</artifactId>
            <version>2.23.0.Final</version>
            <scope>runtime</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.uberfire</groupId>
                    <artifactId>uberfire-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.uberfire</groupId>
                    <artifactId>uberfire-commons</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.uberfire</groupId>
                    <artifactId>uberfire-security-management-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.uberfire</groupId>
                    <artifactId>uberfire-security-management-backend</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.jboss.errai</groupId>
                    <artifactId>errai-bus</artifactId>
                </exclusion>

                <exclusion>
                    <groupId>org.jboss.errai</groupId>
                    <artifactId>errai-security-server</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-jackson-provider</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.codehaus.jackson</groupId>
                    <artifactId>jackson-core-asl</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-jaxrs</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.keycloak</groupId>
                    <artifactId>keycloak-common</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Keycloak  -->
        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-core</artifactId>
            <version>6.0.1</version>
            <scope>runtime</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.bouncycastle</groupId>
                    <artifactId>bcprov-jdk15on</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.bouncycastle</groupId>
                    <artifactId>bcpkix-jdk15on</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-common</artifactId>
            <version>6.0.1</version>
            <scope>runtime</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.bouncycastle</groupId>
                    <artifactId>bcprov-jdk15on</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.bouncycastle</groupId>
                    <artifactId>bcpkix-jdk15on</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.pymmasoftware.jbpm</groupId>
            <artifactId>kie-drools-framework-rest-backend</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.training.Leisure</groupId>
            <artifactId>swimmingpool</artifactId>
            <version>1.0.1-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.kie</groupId>
            <artifactId>business-central</artifactId>
            <classifier>wildfly14</classifier>
            <version>${jbpm.version}</version>
            <type>war</type>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

    </dependencies>

    <build>
        <finalName>kie-wb</finalName>
        <plugins>
            <!-- unpack step -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.10</version>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.kie</groupId>
                                    <artifactId>business-central</artifactId>
                                    <classifier>wildfly14</classifier>
                                    <version>${jbpm.version}</version>
                                    <type>war</type>
                                    <outputDirectory>${project.build.directory}/unpack-tmp</outputDirectory>
                                    <!--includes>**/*.class,**/*.xml</includes-->
                                </artifactItem>

                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.10</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/unpack-tmp/WEB-INF/lib</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.2</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <!-- here the phase you need -->
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target//unpack-tmp/WEB-INF/classes/META-INF</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                            <overwrite>true</overwrite>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <finalName>kie-wb</finalName>
                    <appendAssemblyId>false</appendAssemblyId>
                    <descriptors>
                        <descriptor>src/main/assembly/assembly-kie-wb-wildfly-11.xml</descriptor>
                    </descriptors>
                    <archive>
                        <addMavenDescriptor>false</addMavenDescriptor>

                    </archive>
                </configuration>
            </plugin>

        </plugins>
    </build>
    <profiles>
        <profile>
            <id>docker-build</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.21.0</version>

                        <configuration>
                            <!--registry>192.168.1.184:12500</registry-->
                            <dockerHost>${docker.Host}</dockerHost>

                            <!--  this is for Mac and Amazon Linux -->
                            <!--dockerHost>unix:///var/run/docker.sock</dockerHost-->

                            <verbose>true</verbose>
                            <images>
                                <image>
                                    <name>kie-wb</name>
                                    <build>
                                        <dockerFileDir>${project.basedir}/src/main/docker</dockerFileDir>

                                        <!--copies Jar to the maven directory (uses Assembly system)-->
                                        <assembly>
                                            <descriptorRef>artifact</descriptorRef>
                                        </assembly>
                                        <tags>
                                            <tag>latest</tag>
                                        </tags>

                                    </build>

                                    <run>
                                        <extraHosts>
                                            <host>mongodb:172.17.0.1</host>
                                            <host>kie-wb:172.17.0.1</host>
                                        </extraHosts>
                                        <ports>
                                            <port>10080:8080</port>
                                            <port>10001:8001</port>
                                            <port>50505:50505</port>
                                        </ports>
                                    </run>
                                </image>
                            </images>
                        </configuration>

                        <executions>

                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>


                        </executions>

                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker-deploy</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.21.0</version>

                        <configuration>
                            <registry>registry.hub.docker.com/pymmasoftware</registry>
                            <dockerHost>${docker.Host}</dockerHost>
                            <verbose>true</verbose>
                            <images>
                                <image>
                                    <name>kie-wb</name>
                                    <build>
                                        <dockerFileDir>${project.basedir}/src/main/docker</dockerFileDir>

                                        <!--copies Jar to the maven directory (uses Assembly system)-->
                                        <assembly>
                                            <mode>dir</mode>
                                            <name>maven/</name>
                                            <inline xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2"
                                                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                                                    xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2 http://maven.apache.org/xsd/assembly-1.1.2.xsd">
                                                <id>middleware-rest</id>
                                                <files>
                                                    <file>
                                                        <source>${project.build.directory}/kie-wb.war</source>
                                                        <outputDirectory>./</outputDirectory>
                                                        <destName>kie-wb.war</destName>
                                                    </file>
                                                </files>
                                            </inline>
                                        </assembly>


                                    </build>

                                    <run>
                                        <extraHosts>
                                            <host>mongodb:192.168.1.102</host>
                                            <host>declasin:192.168.1.184</host>
                                        </extraHosts>
                                        <ports>
                                            <port>8080:8080</port>
                                        </ports>
                                    </run>
                                </image>
                            </images>
                            <authConfig>
                                <username>pymmasoftwaredeploy</username>
                                <password>pymmalomme</password>
                            </authConfig>
                            <retries>5</retries>
                        </configuration>

                        <executions>


                            <execution>
                                <id>mydeploy</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>build</goal>
                                    <goal>push</goal>
                                </goals>
                            </execution>

                        </executions>

                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>


</project>